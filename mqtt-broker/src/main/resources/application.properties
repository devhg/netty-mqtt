mqtt.broker.id=mqtt
mqtt.broker.host=127.0.0.1
mqtt.broker.port=8885
mqtt.broker.mqtt-passwd-must=true
# ??ssl??(?websocket)
mqtt.broker.ssl-enabled=false
mqtt.broker.ssl-password=123456
mqtt.broker.keep-alive=60
mqtt.broker.use-epoll=false
mqtt.broker.so-backlog=511
mqtt.broker.so-keep-alive=true
# websocket
mqtt.broker.websocket-enabled=true
mqtt.broker.websocket-port=9995
mqtt.broker.websocket-path=/ws
# kafka
mqtt.broker.kafka.broker-enabled=false
# kafka 127.0.0.1:9092,127.0.0.1:9093
mqtt.broker.kafka.bootstrap.servers=127.0.0.1:9092
mqtt.broker.kafka.acks=-1
mqtt.broker.kafka.retries=3
mqtt.broker.kafka.batch.size=16384
mqtt.broker.kafka.linger.ms=1
mqtt.broker.kafka.buffer.memory=33554432
mqtt.broker.kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mqtt.broker.kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mqtt.broker.kafka.partitioner.class=cn.wizzer.iot.mqtt.server.store.kafka.SimplePartitioner
mqtt.broker.kafka.producer.topic=mqtt_publish
# redis
mqtt.broker.redis-enabled=true
# redis cluster
mqtt.broker.cluster-enabled=false
redis.host=127.0.0.1
redis.port=6379
redis.timeout=3000
redis.max_redir=10
redis.database=0
redis.maxTotal=3000
redis.pool.maxTotal=3000
redis.pool.maxIdle=3000
redis.pool.minIdle=1000
#redis.password=test123
#redis?????? redis.mode=cluster
redis.mode=normal
#redis.nodes=127.0.0.1:16379,127.0.0.1:26379
# web api
server.port=8922
jetty.contextPath=/
jetty.threadpool.idleTimeout=60000
jetty.threadpool.minThreads=10
jetty.threadpool.maxThreads=200